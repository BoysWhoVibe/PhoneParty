# Mafia Game TODO List

**SYNC PROTOCOL: When updating TODO items, ALWAYS update BOTH files in the same action:**
1. Update replit.md 
2. Update attached_assets/TODO list (this file)
3. Use identical content in both locations
4. Verify both changes completed successfully before proceeding

## Future Tasks & Features to Implement

### Core Game Mechanics (High Priority)
✅ **COMPLETED: Town naming voting mode implementation**
   - Players submit town name suggestions ✅
   - Voting on favorite names ✅
   - Mario Party-style tie-breaker ✅
   - Automatic phase transitions ✅
   - Complete backend infrastructure ✅

✅ **COMPLETED: Role assignment system acknowledgment (August 9, 2025)**
   - Role acknowledgment requirement ✅
   - Host control over game start after all acknowledge ✅
   - Progress tracking and real-time updates ✅
   - Smart button states and waiting indicators ✅

2. Role assignment system further enhancements  
   - Custom setup options for different player counts
   - Host-selectable role breakdowns and quantities
   - Preset configurations alongside current auto-assignment

3. Night/Day cycle mechanics
   - Night phase: role-specific actions
   - Day phase: discussion and voting
   - Timer fallbacks for slow players

4. Voting and elimination system
   - Player nomination process
   - Yes/no voting on execution
   - Majority required logic

## UI/UX Improvements (Medium Priority)
5. Lobby waiting state indicator
   - Display "waiting for host to start game" message for non-host players
   - Clear visual indication when waiting for host action

6. Role acknowledgment waiting message enhancement
   - When all players have acknowledged their role, non-host players should see "waiting for host to start the game"
   - Clear indication that all acknowledgments are complete and waiting for host action

### Polish & Enhancement Features (Lower Priority)
7. Audio cues and sound effects
   - "Town, go to sleep" voice lines
   - State transition sounds
   - Text-to-speech integration

8. Animations and visual polish
   - Mario Party-style tie-breaker wheel
   - Smooth transitions between phases
   - Enhanced mobile UI interactions

## Recent Completed Features
✅ **Universal Enter Key Support (July 30, 2025)**
- All text inputs now accept Enter key in addition to button clicks
- Home page: Host name and room code inputs
- Lobby page: Player name input for joining games  
- Town naming page: Town name suggestion input
- Proper validation and pending state handling implemented

✅ **Required Name Entry for Game Joining (July 30, 2025)**
- Home page now requires name entry before joining games
- Added player name input field above room code input
- Join Game button disabled until both name and room code entered
- Removed redundant name entry from lobby page
- Maintained name uniqueness validation on client and server

✅ **Inline Error Message Display (July 30, 2025)**
- Added error message display under name input fields
- Host name and player name inputs show validation errors below field
- Includes empty name, name too long, and name already taken errors
- Input fields highlight red when errors occur
- Errors clear when user starts typing corrections

✅ **Case-Insensitive Name Uniqueness (July 30, 2025)**
- Name uniqueness validation now case-insensitive
- "Sean" and "sean" treated as duplicate names
- Updated player join validation and test player generation
- Consistent checking across all name conflict detection

✅ **Town Name Voting System Implementation (August 9, 2025)**
- Complete voting infrastructure with townNameVotes database table
- Duplicate vote prevention and validation
- Automatic phase progression (town_naming → town_voting → role_assignment)
- Mario Party-style tie-breaker for tied suggestions
- Smart edge case handling (no suggestions, ties, etc.)
- Fixed TypeScript compatibility issues
- Full end-to-end voting workflow implemented

✅ **Role Acknowledgment System Implementation (August 9, 2025)**
- Added roleAcknowledged field to player schema and storage system
- Created acknowledge-role API endpoint with proper validation
- Implemented role acknowledgment mutation hook
- Modified role assignment page with smart button logic:
  - "Acknowledge Role" button for all players initially
  - Progress tracking showing acknowledgment count (e.g., "2/4 acknowledged")
  - Host sees "Start Game" button only when all players acknowledged
  - Non-host players see confirmation message after acknowledging
- Added start-gameplay API endpoint for proper game start flow
- Complete end-to-end role acknowledgment workflow

## User Preferences & Notes
- Keep everything mobile-friendly
- Maintain simple, everyday language in UI
- Focus on reliable functionality over flashy features
- Role assignment system needs flexibility: custom setups by player count + host-selectable role distributions
- UI/UX Standard: All text input fields across all game phases should support Enter key submission